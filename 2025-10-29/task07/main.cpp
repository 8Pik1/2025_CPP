// Дан массив из n целых чисел и натуральное число k, большее или равное двум. Требуется определить, сколько элементов массива дают каждый из возможных остатков при делении на k, начиная с нулевого остатка и заканчивая остатком k−1. После этого необходимо найти самую длинную непрерывную последовательность элементов массива, которые дают одинаковый остаток при делении на k, и вывести её длину вместе с номерами её начала и конца. Далее следует сформировать новый массив, в котором все элементы будут расположены по возрастанию их остатка при делении на k, при этом порядок элементов с одинаковыми остатками должен сохраняться. После этого нужно проверить, существует ли в исходном массиве хотя бы одно число, которое делится без остатка одновременно на два различных делителя числа k, оба больших единицы. Если такие элементы существуют, необходимо вывести первый из них, в противном случае сообщить, что подходящих чисел нет.

#include <iostream>
using namespace std;

int main()
{
    const int n = 12;
    int a[n] = {15, 8, 22, 6, 17, 9, 33, 12, 25, 18, 7, 44};
    int k = 4;
    
    int cnt[10] = {0};
    int rem[10][n];
    int idx[10] = {0};
    
    for (int i = 0; i < n; ++i) {
        int r = a[i] % k;
        cnt[r]++;
        rem[r][idx[r]++] = a[i];
    }
    
    cout << "Остатки: ";
    for (int i = 0; i < k; ++i) {
        cout << cnt[i] << ' ';
    }
    cout << '\n';
    
    int max_len = 1;
    int start = 0;
    int end = 0;
    int curr_len = 1;
    int curr_start = 0;
    
    for (int i = 1; i < n; ++i) {
        if (a[i] % k == a[i-1] % k) {
            curr_len++;
            if (curr_len > max_len) {
                max_len = curr_len;
                start = curr_start;
                end = i;
            }
        }
        else {
            curr_len = 1;
            curr_start = i;
        }
    }
    
    cout << "Самая длинная последовательность: " << max_len << '\n';
    cout << "Начало: " << start << " Конец: " << end << '\n';
    
    int b[n];
    int pos = 0;
    
    for (int i = 0; i < k; ++i) {
        for (int j = 0; j < idx[i]; ++j) {
            b[pos++] = rem[i][j];
        }
    }
    
    cout << "Новый массив: ";
    for (int i = 0; i < n; ++i) {
        cout << b[i] << ' ';
    }
    cout << '\n';
    
    int d1 = 0;
    int d2 = 0;
    for (int i = 2; i < k; ++i) {
        if (k % i == 0) {
            if (d1 == 0) {
                d1 = i;
            }
            else {
                d2 = i;
                break;
            }
        }
    }
    
    int found = -1;
    for (int i = 0; i < n; ++i) {
        if (d2 != 0 && a[i] % d1 == 0 && a[i] % d2 == 0) {
            found = a[i];
            break;
        }
    }
    
    if (found != -1) {
        cout << "Найдено число: " << found << '\n';
    }
    else {
        cout << "Подходящих чисел нет" << '\n';
    }
    
    return 0;
}